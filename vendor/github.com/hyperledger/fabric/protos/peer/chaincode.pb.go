// Code generated by protoc-gen-go. DO NOT EDIT.
// source: peer/chaincode.proto

package peer // import "github.com/hyperledger/fabric/protos/peer"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Confidentiality Levels
type ConfidentialityLevel int32

const (
	ConfidentialityLevel_PUBLIC       ConfidentialityLevel = 0
	ConfidentialityLevel_CONFIDENTIAL ConfidentialityLevel = 1
)

var ConfidentialityLevel_name = map[int32]string{
	0: "PUBLIC",
	1: "CONFIDENTIAL",
}
var ConfidentialityLevel_value = map[string]int32{
	"PUBLIC":       0,
	"CONFIDENTIAL": 1,
}

func (x ConfidentialityLevel) String() string {
	return proto.EnumName(ConfidentialityLevel_name, int32(x))
}
func (ConfidentialityLevel) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_chaincode_7e31771950d09621, []int{0}
}

type ChaincodeSpec_Type int32

const (
	ChaincodeSpec_UNDEFINED ChaincodeSpec_Type = 0
	ChaincodeSpec_GOLANG    ChaincodeSpec_Type = 1
	ChaincodeSpec_NODE      ChaincodeSpec_Type = 2
	ChaincodeSpec_CAR       ChaincodeSpec_Type = 3
	ChaincodeSpec_JAVA      ChaincodeSpec_Type = 4
)

var ChaincodeSpec_Type_name = map[int32]string{
	0: "UNDEFINED",
	1: "GOLANG",
	2: "NODE",
	3: "CAR",
	4: "JAVA",
}
var ChaincodeSpec_Type_value = map[string]int32{
	"UNDEFINED": 0,
	"GOLANG":    1,
	"NODE":      2,
	"CAR":       3,
	"JAVA":      4,
}

func (x ChaincodeSpec_Type) String() string {
	return proto.EnumName(ChaincodeSpec_Type_name, int32(x))
}
func (ChaincodeSpec_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_chaincode_7e31771950d09621, []int{2, 0}
}

type ChaincodeDeploymentSpec_ExecutionEnvironment int32

const (
	ChaincodeDeploymentSpec_DOCKER ChaincodeDeploymentSpec_ExecutionEnvironment = 0
	ChaincodeDeploymentSpec_SYSTEM ChaincodeDeploymentSpec_ExecutionEnvironment = 1
)

var ChaincodeDeploymentSpec_ExecutionEnvironment_name = map[int32]string{
	0: "DOCKER",
	1: "SYSTEM",
}
var ChaincodeDeploymentSpec_ExecutionEnvironment_value = map[string]int32{
	"DOCKER": 0,
	"SYSTEM": 1,
}

func (x ChaincodeDeploymentSpec_ExecutionEnvironment) String() string {
	return proto.EnumName(ChaincodeDeploymentSpec_ExecutionEnvironment_name, int32(x))
}
func (ChaincodeDeploymentSpec_ExecutionEnvironment) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_chaincode_7e31771950d09621, []int{3, 0}
}

// ChaincodeID contains the path as specified by the deploy transaction
// that created it as well as the hashCode that is generated by the
// system for the path. From the user level (ie, CLI, REST API and so on)
// deploy transaction is expected to provide the path and other requests
// are expected to provide the hashCode. The other value will be ignored.
// Internally, the structure could contain both values. For instance, the
// hashCode will be set when first generated using the path
type ChaincodeID struct {
	// deploy transaction will use the path
	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	// all other requests will use the name (really a hashcode) generated by
	// the deploy transaction
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// user friendly version name for the chaincode
	Version              string   `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChaincodeID) Reset()         { *m = ChaincodeID{} }
func (m *ChaincodeID) String() string { return proto.CompactTextString(m) }
func (*ChaincodeID) ProtoMessage()    {}
func (*ChaincodeID) Descriptor() ([]byte, []int) {
	return fileDescriptor_chaincode_7e31771950d09621, []int{0}
}
func (m *ChaincodeID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChaincodeID.Unmarshal(m, b)
}
func (m *ChaincodeID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChaincodeID.Marshal(b, m, deterministic)
}
func (dst *ChaincodeID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChaincodeID.Merge(dst, src)
}
func (m *ChaincodeID) XXX_Size() int {
	return xxx_messageInfo_ChaincodeID.Size(m)
}
func (m *ChaincodeID) XXX_DiscardUnknown() {
	xxx_messageInfo_ChaincodeID.DiscardUnknown(m)
}

var xxx_messageInfo_ChaincodeID proto.InternalMessageInfo

func (m *ChaincodeID) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *ChaincodeID) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ChaincodeID) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

// Carries the chaincode function and its arguments.
// UnmarshalJSON in transaction.go converts the string-based REST/JSON input to
// the []byte-based current ChaincodeInput structure.
type ChaincodeInput struct {
	Args                 [][]byte          `protobuf:"bytes,1,rep,name=args,proto3" json:"args,omitempty"`
	Decorations          map[string][]byte `protobuf:"bytes,2,rep,name=decorations,proto3" json:"decorations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ChaincodeInput) Reset()         { *m = ChaincodeInput{} }
func (m *ChaincodeInput) String() string { return proto.CompactTextString(m) }
func (*ChaincodeInput) ProtoMessage()    {}
func (*ChaincodeInput) Descriptor() ([]byte, []int) {
	return fileDescriptor_chaincode_7e31771950d09621, []int{1}
}
func (m *ChaincodeInput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChaincodeInput.Unmarshal(m, b)
}
func (m *ChaincodeInput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChaincodeInput.Marshal(b, m, deterministic)
}
func (dst *ChaincodeInput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChaincodeInput.Merge(dst, src)
}
func (m *ChaincodeInput) XXX_Size() int {
	return xxx_messageInfo_ChaincodeInput.Size(m)
}
func (m *ChaincodeInput) XXX_DiscardUnknown() {
	xxx_messageInfo_ChaincodeInput.DiscardUnknown(m)
}

var xxx_messageInfo_ChaincodeInput proto.InternalMessageInfo

func (m *ChaincodeInput) GetArgs() [][]byte {
	if m != nil {
		return m.Args
	}
	return nil
}

func (m *ChaincodeInput) GetDecorations() map[string][]byte {
	if m != nil {
		return m.Decorations
	}
	return nil
}

// Carries the chaincode specification. This is the actual metadata required for
// defining a chaincode.
type ChaincodeSpec struct {
	Type        ChaincodeSpec_Type `protobuf:"varint,1,opt,name=type,proto3,enum=protos.ChaincodeSpec_Type" json:"type,omitempty"`
	ChaincodeId *ChaincodeID       `protobuf:"bytes,2,opt,name=chaincode_id,json=chaincodeId,proto3" json:"chaincode_id,omitempty"`
	Input       *ChaincodeInput    `protobuf:"bytes,3,opt,name=input,proto3" json:"input,omitempty"`
	Timeout     int32              `protobuf:"varint,4,opt,name=timeout,proto3" json:"timeout,omitempty"`
	MspId       string             `protobuf:"bytes,5,opt,name=mspId,proto3" json:"mspId,omitempty"`
	// installed date .
	CreateDate           *timestamp.Timestamp `protobuf:"bytes,6,opt,name=createDate,proto3" json:"createDate,omitempty"`
	Remark               string               `protobuf:"bytes,7,opt,name=remark,proto3" json:"remark,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ChaincodeSpec) Reset()         { *m = ChaincodeSpec{} }
func (m *ChaincodeSpec) String() string { return proto.CompactTextString(m) }
func (*ChaincodeSpec) ProtoMessage()    {}
func (*ChaincodeSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_chaincode_7e31771950d09621, []int{2}
}
func (m *ChaincodeSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChaincodeSpec.Unmarshal(m, b)
}
func (m *ChaincodeSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChaincodeSpec.Marshal(b, m, deterministic)
}
func (dst *ChaincodeSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChaincodeSpec.Merge(dst, src)
}
func (m *ChaincodeSpec) XXX_Size() int {
	return xxx_messageInfo_ChaincodeSpec.Size(m)
}
func (m *ChaincodeSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_ChaincodeSpec.DiscardUnknown(m)
}

var xxx_messageInfo_ChaincodeSpec proto.InternalMessageInfo

func (m *ChaincodeSpec) GetType() ChaincodeSpec_Type {
	if m != nil {
		return m.Type
	}
	return ChaincodeSpec_UNDEFINED
}

func (m *ChaincodeSpec) GetChaincodeId() *ChaincodeID {
	if m != nil {
		return m.ChaincodeId
	}
	return nil
}

func (m *ChaincodeSpec) GetInput() *ChaincodeInput {
	if m != nil {
		return m.Input
	}
	return nil
}

func (m *ChaincodeSpec) GetTimeout() int32 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

func (m *ChaincodeSpec) GetMspId() string {
	if m != nil {
		return m.MspId
	}
	return ""
}

func (m *ChaincodeSpec) GetCreateDate() *timestamp.Timestamp {
	if m != nil {
		return m.CreateDate
	}
	return nil
}

func (m *ChaincodeSpec) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

// Specify the deployment of a chaincode.
// TODO: Define `codePackage`.
type ChaincodeDeploymentSpec struct {
	ChaincodeSpec        *ChaincodeSpec                               `protobuf:"bytes,1,opt,name=chaincode_spec,json=chaincodeSpec,proto3" json:"chaincode_spec,omitempty"`
	CodePackage          []byte                                       `protobuf:"bytes,3,opt,name=code_package,json=codePackage,proto3" json:"code_package,omitempty"`
	ExecEnv              ChaincodeDeploymentSpec_ExecutionEnvironment `protobuf:"varint,4,opt,name=exec_env,json=execEnv,proto3,enum=protos.ChaincodeDeploymentSpec_ExecutionEnvironment" json:"exec_env,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                     `json:"-"`
	XXX_unrecognized     []byte                                       `json:"-"`
	XXX_sizecache        int32                                        `json:"-"`
}

func (m *ChaincodeDeploymentSpec) Reset()         { *m = ChaincodeDeploymentSpec{} }
func (m *ChaincodeDeploymentSpec) String() string { return proto.CompactTextString(m) }
func (*ChaincodeDeploymentSpec) ProtoMessage()    {}
func (*ChaincodeDeploymentSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_chaincode_7e31771950d09621, []int{3}
}
func (m *ChaincodeDeploymentSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChaincodeDeploymentSpec.Unmarshal(m, b)
}
func (m *ChaincodeDeploymentSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChaincodeDeploymentSpec.Marshal(b, m, deterministic)
}
func (dst *ChaincodeDeploymentSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChaincodeDeploymentSpec.Merge(dst, src)
}
func (m *ChaincodeDeploymentSpec) XXX_Size() int {
	return xxx_messageInfo_ChaincodeDeploymentSpec.Size(m)
}
func (m *ChaincodeDeploymentSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_ChaincodeDeploymentSpec.DiscardUnknown(m)
}

var xxx_messageInfo_ChaincodeDeploymentSpec proto.InternalMessageInfo

func (m *ChaincodeDeploymentSpec) GetChaincodeSpec() *ChaincodeSpec {
	if m != nil {
		return m.ChaincodeSpec
	}
	return nil
}

func (m *ChaincodeDeploymentSpec) GetCodePackage() []byte {
	if m != nil {
		return m.CodePackage
	}
	return nil
}

func (m *ChaincodeDeploymentSpec) GetExecEnv() ChaincodeDeploymentSpec_ExecutionEnvironment {
	if m != nil {
		return m.ExecEnv
	}
	return ChaincodeDeploymentSpec_DOCKER
}

// Carries the chaincode function and its arguments.
type ChaincodeInvocationSpec struct {
	ChaincodeSpec        *ChaincodeSpec `protobuf:"bytes,1,opt,name=chaincode_spec,json=chaincodeSpec,proto3" json:"chaincode_spec,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ChaincodeInvocationSpec) Reset()         { *m = ChaincodeInvocationSpec{} }
func (m *ChaincodeInvocationSpec) String() string { return proto.CompactTextString(m) }
func (*ChaincodeInvocationSpec) ProtoMessage()    {}
func (*ChaincodeInvocationSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_chaincode_7e31771950d09621, []int{4}
}
func (m *ChaincodeInvocationSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChaincodeInvocationSpec.Unmarshal(m, b)
}
func (m *ChaincodeInvocationSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChaincodeInvocationSpec.Marshal(b, m, deterministic)
}
func (dst *ChaincodeInvocationSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChaincodeInvocationSpec.Merge(dst, src)
}
func (m *ChaincodeInvocationSpec) XXX_Size() int {
	return xxx_messageInfo_ChaincodeInvocationSpec.Size(m)
}
func (m *ChaincodeInvocationSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_ChaincodeInvocationSpec.DiscardUnknown(m)
}

var xxx_messageInfo_ChaincodeInvocationSpec proto.InternalMessageInfo

func (m *ChaincodeInvocationSpec) GetChaincodeSpec() *ChaincodeSpec {
	if m != nil {
		return m.ChaincodeSpec
	}
	return nil
}

// LifecycleEvent is used as the payload of the chaincode event emitted by LSCC
type LifecycleEvent struct {
	ChaincodeName        string   `protobuf:"bytes,1,opt,name=chaincode_name,json=chaincodeName,proto3" json:"chaincode_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LifecycleEvent) Reset()         { *m = LifecycleEvent{} }
func (m *LifecycleEvent) String() string { return proto.CompactTextString(m) }
func (*LifecycleEvent) ProtoMessage()    {}
func (*LifecycleEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_chaincode_7e31771950d09621, []int{5}
}
func (m *LifecycleEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LifecycleEvent.Unmarshal(m, b)
}
func (m *LifecycleEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LifecycleEvent.Marshal(b, m, deterministic)
}
func (dst *LifecycleEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LifecycleEvent.Merge(dst, src)
}
func (m *LifecycleEvent) XXX_Size() int {
	return xxx_messageInfo_LifecycleEvent.Size(m)
}
func (m *LifecycleEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_LifecycleEvent.DiscardUnknown(m)
}

var xxx_messageInfo_LifecycleEvent proto.InternalMessageInfo

func (m *LifecycleEvent) GetChaincodeName() string {
	if m != nil {
		return m.ChaincodeName
	}
	return ""
}

func init() {
	proto.RegisterType((*ChaincodeID)(nil), "protos.ChaincodeID")
	proto.RegisterType((*ChaincodeInput)(nil), "protos.ChaincodeInput")
	proto.RegisterMapType((map[string][]byte)(nil), "protos.ChaincodeInput.DecorationsEntry")
	proto.RegisterType((*ChaincodeSpec)(nil), "protos.ChaincodeSpec")
	proto.RegisterType((*ChaincodeDeploymentSpec)(nil), "protos.ChaincodeDeploymentSpec")
	proto.RegisterType((*ChaincodeInvocationSpec)(nil), "protos.ChaincodeInvocationSpec")
	proto.RegisterType((*LifecycleEvent)(nil), "protos.LifecycleEvent")
	proto.RegisterEnum("protos.ConfidentialityLevel", ConfidentialityLevel_name, ConfidentialityLevel_value)
	proto.RegisterEnum("protos.ChaincodeSpec_Type", ChaincodeSpec_Type_name, ChaincodeSpec_Type_value)
	proto.RegisterEnum("protos.ChaincodeDeploymentSpec_ExecutionEnvironment", ChaincodeDeploymentSpec_ExecutionEnvironment_name, ChaincodeDeploymentSpec_ExecutionEnvironment_value)
}

func init() { proto.RegisterFile("peer/chaincode.proto", fileDescriptor_chaincode_7e31771950d09621) }

var fileDescriptor_chaincode_7e31771950d09621 = []byte{
	// 703 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x54, 0xdb, 0x6e, 0xd3, 0x4c,
	0x10, 0xae, 0x73, 0x6c, 0xd7, 0x69, 0xe4, 0x7f, 0xff, 0x50, 0xac, 0xdc, 0x10, 0x2c, 0x21, 0x02,
	0x42, 0x8e, 0x14, 0x2a, 0x40, 0x15, 0xaa, 0x94, 0xc6, 0x6e, 0xe5, 0x12, 0x92, 0xca, 0x4d, 0x91,
	0xe0, 0x26, 0xda, 0xac, 0x27, 0x8e, 0x55, 0x9f, 0x64, 0x6f, 0xac, 0xfa, 0x31, 0x78, 0x12, 0x9e,
	0x8b, 0xb7, 0x40, 0xbb, 0x6e, 0x0e, 0xa5, 0xbd, 0xe3, 0xca, 0x33, 0xe3, 0x6f, 0x0e, 0xdf, 0xb7,
	0xb3, 0x8b, 0x5a, 0x31, 0x40, 0xd2, 0xa3, 0x4b, 0xe2, 0x85, 0x34, 0x72, 0x40, 0x8f, 0x93, 0x88,
	0x45, 0xb8, 0x26, 0x3e, 0x69, 0xfb, 0x85, 0x1b, 0x45, 0xae, 0x0f, 0x3d, 0xe1, 0xce, 0x57, 0x8b,
	0x1e, 0xf3, 0x02, 0x48, 0x19, 0x09, 0xe2, 0x02, 0xa8, 0x4d, 0x90, 0x3c, 0x5c, 0xe7, 0x5a, 0x06,
	0xc6, 0xa8, 0x12, 0x13, 0xb6, 0x54, 0xa5, 0x8e, 0xd4, 0x3d, 0xb0, 0x85, 0xcd, 0x63, 0x21, 0x09,
	0x40, 0x2d, 0x15, 0x31, 0x6e, 0x63, 0x15, 0xd5, 0x33, 0x48, 0x52, 0x2f, 0x0a, 0xd5, 0xb2, 0x08,
	0xaf, 0x5d, 0xed, 0x97, 0x84, 0x9a, 0xdb, 0x8a, 0x61, 0xbc, 0x62, 0xbc, 0x00, 0x49, 0xdc, 0x54,
	0x95, 0x3a, 0xe5, 0x6e, 0xc3, 0x16, 0x36, 0xb6, 0x90, 0xec, 0x00, 0x8d, 0x12, 0xc2, 0xbc, 0x28,
	0x4c, 0xd5, 0x52, 0xa7, 0xdc, 0x95, 0xfb, 0xaf, 0x8b, 0xa1, 0x52, 0xfd, 0x61, 0x01, 0xdd, 0xd8,
	0x22, 0xcd, 0x90, 0x25, 0xb9, 0xbd, 0x9b, 0xdb, 0x3e, 0x45, 0xca, 0xdf, 0x00, 0xac, 0xa0, 0xf2,
	0x2d, 0xe4, 0xf7, 0x34, 0xb8, 0x89, 0x5b, 0xa8, 0x9a, 0x11, 0x7f, 0x55, 0xd0, 0x68, 0xd8, 0x85,
	0x73, 0x52, 0xfa, 0x24, 0x69, 0xbf, 0x4b, 0xe8, 0x70, 0xd3, 0xf0, 0x3a, 0x06, 0x8a, 0x75, 0x54,
	0x61, 0x79, 0x0c, 0x22, 0xbd, 0xd9, 0x6f, 0x3f, 0x9a, 0x8a, 0x83, 0xf4, 0x69, 0x1e, 0x83, 0x2d,
	0x70, 0xf8, 0x03, 0x6a, 0x6c, 0x0e, 0x60, 0xe6, 0x39, 0xa2, 0x85, 0xdc, 0xff, 0xff, 0x31, 0x1b,
	0xc3, 0x96, 0x37, 0x40, 0xcb, 0xc1, 0xef, 0x50, 0xd5, 0xe3, 0x04, 0x85, 0x86, 0x72, 0xff, 0xe8,
	0x69, 0xfa, 0x76, 0x01, 0xe2, 0x9a, 0xf3, 0xd3, 0x8b, 0x56, 0x4c, 0xad, 0x74, 0xa4, 0x6e, 0xd5,
	0x5e, 0xbb, 0x9c, 0x5b, 0x90, 0xc6, 0x96, 0xa3, 0x56, 0x05, 0xdf, 0xc2, 0xc1, 0x27, 0x08, 0xd1,
	0x04, 0x08, 0x03, 0x83, 0x30, 0x50, 0x6b, 0xa2, 0x45, 0x5b, 0x2f, 0x16, 0x42, 0x5f, 0x2f, 0x84,
	0x3e, 0x5d, 0x2f, 0x84, 0xbd, 0x83, 0xc6, 0x47, 0xa8, 0x96, 0x40, 0x40, 0x92, 0x5b, 0xb5, 0x2e,
	0x4a, 0xde, 0x7b, 0xda, 0x29, 0xaa, 0x70, 0xde, 0xf8, 0x10, 0x1d, 0xdc, 0x8c, 0x0d, 0xf3, 0xdc,
	0x1a, 0x9b, 0x86, 0xb2, 0x87, 0x11, 0xaa, 0x5d, 0x4c, 0x46, 0x83, 0xf1, 0x85, 0x22, 0xe1, 0x7d,
	0x54, 0x19, 0x4f, 0x0c, 0x53, 0x29, 0xe1, 0x3a, 0x2a, 0x0f, 0x07, 0xb6, 0x52, 0xe6, 0xa1, 0xcb,
	0xc1, 0xb7, 0x81, 0x52, 0xd1, 0x7e, 0x96, 0xd0, 0xf3, 0x0d, 0x3b, 0x03, 0x62, 0x3f, 0xca, 0x03,
	0x08, 0x99, 0x50, 0xfd, 0x33, 0x6a, 0x6e, 0x55, 0x4c, 0x63, 0xa0, 0x42, 0x7f, 0xb9, 0xff, 0xec,
	0x49, 0xfd, 0xed, 0x43, 0xfa, 0xe0, 0xcc, 0x5e, 0xa2, 0x86, 0x48, 0x8c, 0x09, 0xbd, 0x25, 0x2e,
	0x08, 0x49, 0x1b, 0xb6, 0xcc, 0x63, 0x57, 0x45, 0x08, 0x4f, 0xd0, 0x3e, 0xdc, 0x01, 0x9d, 0x41,
	0x98, 0x09, 0x05, 0x9b, 0xfd, 0xe3, 0x47, 0xa5, 0x1f, 0xce, 0xa4, 0x9b, 0x77, 0x40, 0x57, 0x7c,
	0xaf, 0xcc, 0x30, 0xf3, 0x92, 0x28, 0xe4, 0x3f, 0xec, 0x3a, 0xaf, 0x62, 0x86, 0x99, 0xa6, 0xa3,
	0xd6, 0x53, 0x00, 0x2e, 0x87, 0x31, 0x19, 0x7e, 0x31, 0xed, 0x42, 0x9a, 0xeb, 0xef, 0xd7, 0x53,
	0xf3, 0xab, 0x22, 0x5d, 0x56, 0xf6, 0x4b, 0x4a, 0xd9, 0x6e, 0xc2, 0x62, 0x01, 0x94, 0x79, 0x19,
	0xcc, 0x1c, 0xc2, 0x40, 0x8b, 0x77, 0x24, 0xb1, 0xc2, 0x2c, 0xa2, 0x62, 0x91, 0xff, 0x5d, 0x92,
	0xfb, 0x76, 0xff, 0x79, 0xce, 0xcc, 0x85, 0x10, 0x8a, 0xfb, 0x31, 0x23, 0xbe, 0xab, 0x7d, 0x44,
	0xcd, 0x91, 0xb7, 0x00, 0x9a, 0x53, 0x1f, 0xcc, 0x8c, 0x4f, 0xfc, 0x6a, 0xb7, 0x91, 0xb8, 0xed,
	0xc5, 0xd5, 0xd9, 0x56, 0x1c, 0x93, 0x00, 0xde, 0x1e, 0xa3, 0xd6, 0x30, 0x0a, 0x17, 0x9e, 0x03,
	0x21, 0xf3, 0x88, 0xef, 0xb1, 0x7c, 0x04, 0x19, 0xf8, 0x9c, 0xe4, 0xd5, 0xcd, 0xd9, 0xc8, 0x1a,
	0x2a, 0x7b, 0x58, 0x41, 0x8d, 0xe1, 0x64, 0x7c, 0x6e, 0x19, 0xe6, 0x78, 0x6a, 0x0d, 0x46, 0x8a,
	0x74, 0x36, 0x41, 0x5a, 0x94, 0xb8, 0xfa, 0x32, 0x8f, 0x21, 0xf1, 0xc1, 0x71, 0x21, 0xd1, 0x17,
	0x64, 0x9e, 0x78, 0x74, 0xcd, 0x82, 0x3f, 0x61, 0x3f, 0xde, 0xb8, 0x1e, 0x5b, 0xae, 0xe6, 0x3a,
	0x8d, 0x82, 0xde, 0x0e, 0xb4, 0x57, 0x40, 0x8b, 0x17, 0x2c, 0xed, 0x71, 0xe8, 0xbc, 0x78, 0xdd,
	0xde, 0xff, 0x09, 0x00, 0x00, 0xff, 0xff, 0x3b, 0xad, 0xb7, 0x53, 0xfc, 0x04, 0x00, 0x00,
}
